name: build

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

env:
  LM_LICENSE_FILE: "$GITHUB_WORKSPACE/tools/mwccarm/license.dat"
  CC: gcc-10
  CXX: g++-10
  COMPARE: 0

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Update and Install Software
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update
          sudo apt -y --allow-downgrades install g++-10-multilib linux-libc-dev binutils-arm-none-eabi p7zip-full pkg-config libpugixml-dev ppa-purge
          sudo ppa-purge -y ppa:ubuntu-toolchain-r/test || true
          sudo dpkg --add-architecture i386
          sudo mkdir -pm755 /etc/apt/keyrings
          sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
          sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
          sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/$(lsb_release -cs)/winehq-$(lsb_release -cs).sources
          sudo apt update
          sudo apt -y --allow-downgrades install --install-recommends winehq-stable

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Repo
        run: |
          mkdir -p ~/download
          cd ~/download
          wget https://github.com/pret/pokeheartgold/raw/workflows/assets/mwccarm.zip
          wget https://github.com/pret/pokeheartgold/raw/workflows/assets/NitroSDK-3_2-060901.7z
          unzip mwccarm.zip
          mv mwccarm $GITHUB_WORKSPACE/tools
          7z x NitroSDK-3_2-060901.7z
          mv NitroSDK-3_2-060901/tools/bin $GITHUB_WORKSPACE/tools
          mv NitroSDK-3_2-060901/include/nitro/specfiles/ARM7-TS.lcf.template $GITHUB_WORKSPACE/sub/
          mv NitroSDK-3_2-060901/include/nitro/specfiles/ARM9-TS.lcf.template $GITHUB_WORKSPACE/
          mv NitroSDK-3_2-060901/include/nitro/specfiles/mwldarm.response.template $GITHUB_WORKSPACE/
        working-directory: ~

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 19

      - name: Build HeartGold
        env:
          GAME_VERSION: HEARTGOLD
          GAME_LANGUAGE: ENGLISH
          GAME_REVISION: 0
        run: make -j4

      - name: Build SoulSilver
        env:
          GAME_VERSION: SOULSILVER
          GAME_LANGUAGE: ENGLISH
          GAME_REVISION: 0
        run: make -j4

      - name: Post error archive
        if: failure()
        continue-on-error: true
        run: find . -maxdepth 2 -type d \( -name build -or -name files \) -exec tar -czvhf failure.tar.gz {} +

      - name: Post error upload
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pokeheartgold-failure-${{ github.run_id }}
          path: failure.tar.gz
          retention-days: 1

      - name: Checkout xMAP
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v4
        with:
          path: 'xmap'
          ref: 'xmap'

      - name: Move xMAP
        if: ${{ github.event_name == 'push' }}
        run: |
          mkdir -p xmap
          cp build/heartgold.us/*.xMAP xmap/heartgoldus.xMAP
          cp build/soulsilver.us/*.xMAP xmap/soulsilverus.xMAP
          echo "XMAP_COMMIT_MSG=$( git log --format=%s ${GITHUB_SHA} )" >> $GITHUB_ENV

      - name: Update xMAP
        if: ${{ github.event_name == 'push' }}
        uses: EndBug/add-and-commit@v9
        with:
          cwd: "./xmap"
          add: "*.xMAP"
          message: ${{ env.XMAP_COMMIT_MSG }}

